zfp 0.3.1, May 6, 2015

  - Fixed rare bug caused by exponent underflow in blocks with no normal
    and some denormal numbers.


zfp 0.3.0, March 3, 2015

  - Modified the default decorrelating transform to one that uses only
    additions and bit shifts.  This new transform, in addition to being
    faster, also has some theoretical optimality properties and tends to
    improve rate distortion.

  - Added compile-time support for parameterized transforms, e.g. to
    support other popular transforms like DCT, HCT, and Walsh-Hadamard.

  - Made forward transform range preserving: (-1, 1) is mapped to (-1, 1).
    Consequently Q1.62 fixed point can be used throughout.

  - Changed the order in which bits are emitted within each bit plane
    to be more intelligent.  Group tests are now deferred until they
    are needed, i.e. just before the value bits for the group being
    tested.  This improves the quality of fixed-rate encodings, but
    has no impact on compressed size.

  - Made several optimizations to improve performance.

  - Added floating-point traits to reduce the number of template
    parameters.  It is now possible to declare a 3D array as
    Array3<float>, for example.

  - Added functions for setting the array scalar type and dimensions.

  - Consolidated several header files.

  - Added testzfp for regression testing.


zfp 0.2.1, December 12, 2014

  - Added Win64 support via Microsoft Visual Studio compiler.

  - Fixed broken support for IBM's xlc compiler.

  - Made several minor changes to suppress compiler warnings.

  - Documented expected output for the diffusion example.


zfp 0.2.0, December 2, 2014

  - The compression interface from zfpcompress was relocated to a
    separate library, called libzfp, and modified to be callable from C.
    This API now uses a parameter object (zfp_params) to specify array
    type and dimensions as well as compression parameters.

  - Several utility functions were added to simplify libzfp usage:

    o Functions for setting the rate, precision, and accuracy.
      Corresponding functions were also added to the Codec class.

    o A function for estimating the buffer size needed for compression.

  - The Array class functionality was expanded:

    o Support for accessing the compressed bit stream stored with an
      array, e.g. for offline compressed storage and for initializing
      an already compressed array.

    o Functions for dynamically specifying the cache size.

    o The default cache is now direct-mapped instead of two-way
      associative.

  - Minor bug fixes:

    o Corrected the value of the lowest possible bit plane to account for
      both the smallest exponent and the number of bits in the significand.

    o Corrected inconsistent use of rate and precision.  The rate refers
      to the number of compressed bits per floating-point value, while
      the precision refers to the number of uncompressed bits.  The Array
      API was changed accordingly.


zfp 0.1.0, November 12, 2014

  - Initial beta release.
